import{_ as s,c as a,o as e,a as n}from"./app.51745cc0.js";const F=JSON.parse('{"title":"Class: Expat","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"load","slug":"load","link":"#load","children":[]},{"level":3,"title":"version","slug":"version","link":"#version","children":[]},{"level":3,"title":"parse","slug":"parse","link":"#parse","children":[]}]}],"relativePath":"classes/expat.Expat.md"}'),l={name:"classes/expat.Expat.md"},t=n(`<h1 id="class-expat" tabindex="-1">Class: Expat <a class="header-anchor" href="#class-expat" aria-hidden="true">#</a></h1><p><a href="/hpcc-js-wasm/modules/expat.html">expat</a>.Expat</p><p>Expat XML parser WASM library, provides a simplified wrapper around the Expat XML Parser library.</p><p>See <a href="https://libexpat.github.io/" target="_blank" rel="noreferrer">libexpat.github.io</a> for c++ details.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Expat</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@hpcc-js/wasm/expat</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> expat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> Expat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">load</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> xml </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;root&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">        &lt;child xxx=&quot;yyy&quot;&gt;content&lt;/child&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;/root&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> callback </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">startElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">attrs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">attrs</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">endElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">end</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">characterData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">characterData</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">expat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(xml</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> callback)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="load" tabindex="-1">load <a class="header-anchor" href="#load" aria-hidden="true">#</a></h3><p>\u25B8 <code>Static</code> <strong>load</strong>(): <code>Promise</code>&lt;<a href="/hpcc-js-wasm/classes/expat.Expat.html"><code>Expat</code></a>&gt;</p><p>Compiles and instantiates the raw wasm.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>In general WebAssembly compilation is disallowed on the main thread if the buffer size is larger than 4KB, hence forcing <code>load</code> to be asynchronous;</p></div><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>Promise</code>&lt;<a href="/hpcc-js-wasm/classes/expat.Expat.html"><code>Expat</code></a>&gt;</p><p>A promise to an instance of the Expat class.</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/hpcc-systems/hpcc-js-wasm/blob/b892840/src/expat.ts#L63" target="_blank" rel="noreferrer">expat.ts:63</a></p><hr><h3 id="version" tabindex="-1">version <a class="header-anchor" href="#version" aria-hidden="true">#</a></h3><p>\u25B8 <strong>version</strong>(): <code>string</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>string</code></p><p>The Expat c++ version</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p><a href="https://github.com/hpcc-systems/hpcc-js-wasm/blob/b892840/src/expat.ts#L73" target="_blank" rel="noreferrer">expat.ts:73</a></p><hr><h3 id="parse" tabindex="-1">parse <a class="header-anchor" href="#parse" aria-hidden="true">#</a></h3><p>\u25B8 <strong>parse</strong>(<code>xml</code>, <code>callback</code>): <code>boolean</code></p><p>Parses the XML with suitable callbacks.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <em>IParser.characterData</em> callback method can get called several times for a single tag element.</p></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>xml</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">string containing XML</td></tr><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><a href="/hpcc-js-wasm/interfaces/expat.IParser.html"><code>IParser</code></a></td><td style="text-align:left;">Callback interface</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>boolean</code></p><p><code>true</code>|<code>false</code> if the XML parse succeeds.</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p><a href="https://github.com/hpcc-systems/hpcc-js-wasm/blob/b892840/src/expat.ts#L88" target="_blank" rel="noreferrer">expat.ts:88</a></p>`,35),o=[t];function p(r,c,i,d,D,h){return e(),a("div",null,o)}const A=s(l,[["render",p]]);export{F as __pageData,A as default};
